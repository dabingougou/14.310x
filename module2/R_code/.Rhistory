install.packages(vest)
install.packages(rvest)
install.packages("rvest")
i
install.packages("rvest")
edxsubjects <- read_html("https://www.edx.org/subjects")
library(rvest)
edxsubjects <- read_html("https://www.edx.org/subjects")
subjectshtml<-html_nodes(edxsubjects, ".align-items-center")
subjecttext<-html_text(subjectshtml)
print(subjecttext)
View(edxsubjects)
library(rvest)
edxsubjects <- read_html("https://www.edx.org/subjects")
subjectshtml<-html_nodes(edxsubjects, ".mb-4+ .mb-4 .align-items-center")
subjecttext<-html_text(subjectshtml)
print(subjecttext)
library(rvest)
library(tidyr)
library(dplyr)
kiss <- read_html("https://www.abebooks.com/servlet/SearchResults?sts=t&cm_sp=SearchF-_-home-_-Results&an=walter+isaacson&tn=Kissinger%3A+A+Biography&kn=")
View(kiss)
price <- kiss %>%
html_nodes(".item-price") %>%
html_text() %>%
readr::parse_number()
print(price)
title <- kiss %>%
html_nodes("span") %>%
html_text() %>%
readr::parse_character()
print(title)
title <- kiss %>%
html_nodes(".col-xs-8 , span") %>%
html_text() %>%
readr::parse_character()
print(title)
?rbinom
rm(list = ls())
x <- rbinom(1000, 8, 0.2)
head(x)
len(x)
length(x)
hist(x)
rm(list = ls())
successes <- rbinom(1000, 8, 0.2)
length(successes)
#where n refers to number of observations, size refers to number of trials,
#and prob refers to probability of success on each trial
#Question 9&10
hist(successes)
#Question 12
#probability of getting exactly 7 heads on 10 flips
den = dbinom(7, 10, 0.65) # where x is the observations,
print(den)
#size is number of trials, prob is probability
cdf = pbinom(7, 10, 0.65) # where q is the number of observations,
print(cdf)
#size is the number of trials, prob is the probability
cdf2 = pbinom(7, 10, 0.65, lower = F) # where q is the number of observations,
print(cdf2)
#size is the number of trials, prob is the probability
cdf2 = pbinom(6, 10, 0.65, lower = F) # where q is the number of observations,
print(cdf2)
#size is the number of trials, prob is the probability
cdf2 = pbinom(5, 10, 0.65, lower = F) # where q is the number of observations,
print(cdf2)
#size is the number of trials, prob is the probability
cdf2 = pbinom(6, 10, 0.65, lower = F) # where q is the number of observations,
print(cdf2)
#size is the number of trials, prob is the probability
cdf2 = pbinom(5, 10, 0.65, lower = F) # where q is the number of observations,
#size is number of trials, prob is probability
cdf = pbinom(5, 10, 0.65) # where q is the number of observations,
print(cdf)
#size is the number of trials, prob is the probability
cdf2 = pbinom(5, 10, 0.65, lower.tail = F) # where q is the number of observations,
print(cdf2)
library(mtcars)
head(mtcars)
myData <- cars['speed', 'dist']
head(myData)
myData <- cars[['speed'], ['dist']]
myData <- cars[[speed], ['dist']]
myData <- cars[[speed], [dist]]
myData <- cars[[speed] [dist]]
myData <- cars[[speed]]
myData <- cars['speed']
myData <- cars['speed', 'dist']
head(myData)
myData <- cars['speed']
myData <- cars[c('speed', 'dist')]
head(myData)
ggplot(myData, aes(x = speed, y = dist))
library(ggplot)
library(ggplot2)
ggplot(myData, aes(x = speed, y = dist))
myData$speed
ggplot(myData, aes(x = speed, y = dist))
+ geom_point()
ggplot(myData, aes(x = speed, y = dist)) + geom_point()
g <- ggplot(myData, aes(x = speed, y = dist)) + geom_point()
gg <- g + coord_cartesian(xlim = c(10, 15), ylim = c(25, 50))
gg
head(mtcars)
ggplot(mtcars, aes(x = wt)) + geom_histogram()
ggplot(mtcars, aes(x = wt)) + geom_histogram(bins = 6)
ggplot(mtcars, aes(x = wt))
+ geom_histogram(binwidth = 0.5)
ggplot(mtcars, aes(x = wt))
+ geom_histogram(bins = 8)
ggplot(mtcars, aes(x = wt))
+ geom_histogram(bins = 8)
ggplot(mtcars, aes(x = wt))
+ geom_histogram(bins = 8)
ggplot(mtcars, aes(x = wt))
+ geom_histogram(bins = 8)
ggplot(mtcars, aes(x = wt))
+ geom_histogram(bins = 8)
ggplot(mtcars, aes(x = wt)) + geom_histogram(bins = 8)
ggplot(mtcars, aes(x = wt)) + geom_histogram(binwidth = 0.5)
ggplot(mtcars, aes(x = wt)) + geom_histogram(binwidth = 0.5, color = "blue")
ggplot(mtcars, aes(x = wt)) + geom_histogram(binwidth = 0.5, color = "blue", fill = "green" )
h <- ggplot(mtcars, aes(x = wt)) + geom_histogram(binwidth = 0.5, color = "blue", fill = "green" )
h
hh <- h + geom_vline()
hh
hh <- h + geom_vline(aes(xintercept=mean(wt)), color = 'red', linetype = 'dashed')
hh
newplot <-
ggplot(mtcars, aes(x = wt))
newplot
newplot <-
ggplot(mtcars, aes(x = wt)) +
geom_point()
newplot <-
ggplot(mtcars, aes(x = wt, y = speed)) +
geom_point()
newplot <-
ggplot(mtcars, aes(x = wt, y = dist)) +
geom_point()
newplot
newplot <-
ggplot(mtcars, aes(x = wt, y = dist)) +
geom_point()
newplot
ggplot(mtcars, aes(x = wt, y = dist)) +
geom_point()
ggplot(mtcars, aes(x = wt, y = dist)) + geom_point()
ggplot(mtcars, aes(x = speed, y = dist)) + geom_point()
head(mtcars)
ggplot(mtcars, aes(x = mpg, y = wt)) + geom_point()
ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point()
ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point(color = "blue")
ggplot(mtcars, aes(x = wt)) +
geom_histogram(color = "blue",
fill = 'green',
bins = 10)
ggplot(mtcars, aes(x = wt)) +
geom_histogram(color = "blue",
fill = 'green',
bins = 10,
alpha = 0.2)
ggplot(mtcars, aes(x = wt)) +
geom_histogram(color = "blue",
fill = 'green',
bins = 10,
alpha = 0.9)
ggplot(mtcars, aes(x = wt)) +
geom_histogram(color = "blue",
fill = 'green',
bins = 10,
alpha = 0.2)
ggplot(mtcars, aes(x = wt)) +
geom_histogram(color = "blue",
fill = 'green',
bins = 10,
alpha = 0.2) +
geom_density()
ggplot(mtcars, aes(x = wt)) +
geom_histogram(color = "blue",
fill = 'green',
bins = 10,
alpha = 0.2) +
geom_density(alpha = 0.6, fill = 'red')
ggplot(mtcars, aes(x = wt)) +
geom_histogram(aes(y = ..density..),
color = "blue",
fill = 'green',
bins = 10,
alpha = 0.2) +
geom_density(alpha = 0.6, fill = 'red')
ggplot(mtcars, aes(x = wt)) +
geom_histogram(xlim = c(1, 6),
aes(y = ..density..),
color = "blue",
fill = 'green',
bins = 10,
alpha = 0.2) +
geom_density(alpha = 0.6, fill = 'red')
ggplot(mtcars, aes(x = wt)) +
geom_histogram(xlim = c(1, 6),
aes(y = ..density..),
color = "blue",
fill = 'green',
bins = 10,
alpha = 0.2) +
geom_density(alpha = 0.6, fill = 'red')
ggplot(mtcars, aes(x = wt)) +
geom_histogram(aes(xlim = c(1, 6), y = ..density..),
color = "blue",
fill = 'green',
bins = 10,
alpha = 0.2) +
geom_density(alpha = 0.6, fill = 'red')
ggplot(mtcars, aes(x = wt)) +
geom_histogram(aes(y = ..density..),
color = "blue",
fill = 'green',
bins = 10,
alpha = 0.2) +
geom_density(alpha = 0.6, fill = 'red')
ggplot(mtcars, aes(x = wt)) +
coord_cartesian(xlim = c(2, 6)) +
geom_histogram(aes(y = ..density..),
color = "blue",
fill = 'green',
bins = 10,
alpha = 0.2) +
geom_density(alpha = 0.6, fill = 'red')
#Question 14
binom_draws <- as_tibble(data.frame(successes))
binom_draws
successes <- rbinom(1000, 8, 0.2)
estimated_pf <- binom_draws %>%
group_by(successes) %>%
summarize(n=n()) %>%
mutate(freq=n/sum(n))
estimated_pf
?n()
ggplot(estimated_pf, aes(x=successes, y=freq)) +
geom_col() +
ylab("Estimated Density")
#Question 15
#Create a tibble with x and the analytical probability densities.
my_binom<-as_tibble(list(x=0:n, prob=dbinom(0:n, n, p)))
#Question 15
#Create a tibble with x and the analytical probability densities.
my_binom<-as_tibble(list(x=0:1000, prob=dbinom(0:1000, 1000, 0.2)))
#Plot the computed theoretical density.
ggplot(my_binom, aes(x=x, y=prob)) + geom_col() +
ylab("Analytical Density")
#Question 15
#Create a tibble with x and the analytical probability densities.
my_binom<-as_tibble(list(x=0:1000, prob=dbinom(0:1000, 1000, 0.2)))
my_binom
#Question 15
#Create a tibble with x and the analytical probability densities.
my_binom<-as_tibble(list(x=0:1000, prob=dbinom(0:1000, 10, 0.2)))
my_binom
#Plot the computed theoretical density.
ggplot(my_binom, aes(x=x, y=prob)) + geom_col() +
ylab("Analytical Density")
?dbinom
#Question 15
#Create a tibble with x and the analytical probability densities.
my_binom<-as_tibble(list(x=0:1000, prob=dbinom(0:10, 10, 0.2)))
#Question 15
#Create a tibble with x and the analytical probability densities.
my_binom<-as_tibble(list(x=0:1000, prob=dbinom(0:1000, 10, 0.2)))
my_binom
#Question 15
#Create a tibble with x and the analytical probability densities.
my_binom<-as_tibble(list(x=0:1000, prob=dbinom(0:1000, 8, 0.2)))
my_binom
head(my_binom, 20)
#Question 15
#Create a tibble with x and the analytical probability densities.
my_binom<-as_tibble(list(x=0:8, prob=dbinom(0:8, 8, 0.2)))
head(my_binom, 20)
#Question 15
#Create a tibble with x and the analytical probability densities.
my_binom<-as_tibble(list(x=0:1000, prob=dbinom(0:1000, 1000, 0.2)))
head(my_binom, 20)
ggplot(my_binom, aes(x=x, y=prob)) + geom_col() +
ylab("Analytical Density")
calculated_cdf <- my_binom %>%
mutate(cdf=cumsum(prob))
ggplot(calculated_cdf, aes(x=x, y=cdf)) + geom_step() +
ylab("CDF")
