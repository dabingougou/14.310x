provinces <- c("BC", "ON", "QB")
provinces
sample(x = provinces, size = 10, replace = TRUE)
sample(x = provinces, size = 10, replace = FALSE)
sample(x = provinces, size = 3, replace = FALSE)
sample(x = provinces, size = 3, replace = FALSE)
rnorm(n = 100)
?rnorm
rnorm(n = 100, mean = 1, sd = sqrt(2))
sample <- rnorm(n = 100, mean = 1, sd = sqrt(2))
mean(sample)
sd(sample)
sample <- rnorm(n = 1000, mean = 1, sd = sqrt(2))
mean(sample)
sd(sample)
sample <- rnorm(n = 1000, mean = 1, sd = sqrt(2))
mean(sample)
sd(sample)
sample <- rnorm(n = 9000, mean = 1, sd = sqrt(2))
mean(sample)
sd(sample)
density(sample)
sample_density <- density(sample)
type(sample_density)
library(tidyr)
glimpse(sample_density)
library(tidyverse)
glimpse(sample_density)
plot(smaple_density)
plot(sample_density)
coin = c('Heads', 'Tails')
toss = c()
for (i in 1:100) {
toss[i] = sample(x = coin, size = 1, repace = TRUE)
}
toss[i] = sample(x = coin, size = 1, replace = TRUE)
glimpse(toss)
for (i in 1:100) {
toss[i] <- sample(x = coin, size = 1, replace = TRUE)
}
glimpse(toss)
toss[i] <- sample(x = coin, size = 1, replace = FALSE)
for (i in 1:100) {
toss[i] <- sample(x = coin, size = 1, replace = FALSE)
}
glimpse(toss)
for (i in 1:100) {
toss[i] <- sample(x = coin, size = 1, replace = TRUE)
}
glimpse(toss)
ggplot(data = toss, aes(x = toss)) + geom_histogram()
ind = c(1:100)
?rbind
df = data.frame(ind, toss)
ggplot(data = df, aes(x = toss)) + geom_histogram()
glimpse(df)
head(df)
ggplot(data = df, aes(x = toss)) + geom_density()
ggplot(data = df, aes(x = toss)) + geom_bar()
table(toss)
count(toss)
# Creating imaginary census data
marital <- c("married", 'single')
income <- c(1:4)
income <- 1:4
results <- matrix(nrow = 100, ncol = 3, data = NULL)
results <- matrix(nrow = 100, ncol = 3, data = NULL)
results <- matrix(nrow = 100, ncol = 3, data = NA)
colnames(results) = c('marital', 'income', 'province')
for (i in 1:lenth(ind)) {
result[i, 1] <- sample(data = marital, size = 1, replace = TRUE)
result[i, 2] <- sample(data = income, size = 1, replace = TRUE)
result[i, 3] <- sample(data = provinces, size = 1, replace = TRUE)
}
for (i in 1:len(ind)) {
result[i, 1] <- sample(data = marital, size = 1, replace = TRUE)
result[i, 2] <- sample(data = income, size = 1, replace = TRUE)
result[i, 3] <- sample(data = provinces, size = 1, replace = TRUE)
}
?length
for (i in 1:length(ind)) {
result[i, 1] <- sample(data = marital, size = 1, replace = TRUE)
result[i, 2] <- sample(data = income, size = 1, replace = TRUE)
result[i, 3] <- sample(data = provinces, size = 1, replace = TRUE)
}
?sample
for (i in 1:length(ind)) {
result[i, 1] <- sample(x = marital, size = 1, replace = TRUE)
result[i, 2] <- sample(x = income, size = 1, replace = TRUE)
result[i, 3] <- sample(x = provinces, size = 1, replace = TRUE)
}
for (i in 1:length(ind)) {
results[i, 1] <- sample(x = marital, size = 1, replace = TRUE)
results[i, 2] <- sample(x = income, size = 1, replace = TRUE)
results[i, 3] <- sample(x = provinces, size = 1, replace = TRUE)
}
head(results)
?apply(array, margin, ...)
applied_var <- apply(X = results, margin = c(2, 3), table)
applied_var <- apply(X = results, margin = c(2, 3), FUN = table)
applied_var <- apply(X = results, MARGIN = c(2, 3), FUN = table)
applied_var <- apply(X = results, MARGIN = 2, FUN = table)
head(applied_var)
defective <- rep("def", 6)
qualified <- rep("OK", 94)
shipment <- cbind(defective, qualified)
glimpse(shipment)
glimpse(shipment)
shipment <- rbind(defective, qualified)
shipment <- c(defective, qualified)
glimpse(shipment)
table(k_sample)
k_sample <- sample(shipment, size = 22, replace = FALSE)
table(k_sample)
repeated_sample <- rep(NA, 1000)
?summarize
for (i in 1:1000) {
repeated_sample[i] <- sample(shipment, size = 12, replace = FALSE)
}
warnings()
glimpse(repeated_sample)
repeated_sample <- matrix(nrow = 1000, ncol = k, data = NA)
k <- 12
repeated_sample <- matrix(nrow = 1000, ncol = k, data = NA)
for (i in 1:1000) {
repeated_sample[i] <- sample(shipment, size = k, replace = FALSE)
}
warnings()
View(repeated_sample)
for (i in 1:1000) {
repeated_sample[i, ] <- sample(shipment, size = k, replace = FALSE)
}
View(repeated_sample)
?if
?if
counter = 0
for (i in 1:1000) {
if ('def' %in% repeated_sample[i, ]) {
counter = counter + 1
}
}
counter = 0
counter = 0
for (i in 1:1000) {
if ('def' %in% repeated_sample[i, ]) {
counter = counter + 1
}
}
counter = 0
for (i in 1:1000) {
if ('def' %!in% repeated_sample[i, ]) {
counter = counter + 1
}
}
counter = 0
for (i in 1:1000) {
if ('def' %nin% repeated_sample[i, ]) {
counter = counter + 1
}
}
counter = 0
for (i in 1:1000) {
if ('def' negate(%in%) repeated_sample[i, ]) {
counter = counter + 1
}
}
if ('def' %in% repeated_sample[i, ]) {
counter = counter + 1
}
counter = 0
for (i in 1:1000) {
if ('def' %in% repeated_sample[i, ]) {
counter = counter + 1
}
}
k <- 22
repeated_sample <- matrix(nrow = 1000, ncol = k, data = NA)
for (i in 1:1000) {
repeated_sample[i, ] <- sample(shipment, size = k, replace = FALSE)
}
counter = 0
counter = 0
for (i in 1:1000) {
if ('def' %in% repeated_sample[i, ]) {
counter = counter + 1
}
}
k <- 32
repeated_sample <- matrix(nrow = 1000, ncol = k, data = NA)
for (i in 1:1000) {
repeated_sample[i, ] <- sample(shipment, size = k, replace = FALSE)
}
counter = 0
for (i in 1:1000) {
if ('def' %in% repeated_sample[i, ]) {
counter = counter + 1
}
}
?rnorm
pnorm(0.05)
qnorm(0.05)
qnorm(0.05, lowertail = F)
qnorm(0.05, lower.tail = F)
XXX
